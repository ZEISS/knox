# yaml-language-server: $schema=https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas/v3.0/schema.json
openapi: 3.0.1

info:
  title: Knox
  description:

servers:
  - url: https://localhost:8080

paths:
  /_health:
    get:
      tags:
        - Liveness
      summary: Get system health status
      responses:
        "200":
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "500":
          description: System is down
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"

  /_ready:
    get:
      tags:
        - Readiness
      summary: Get system readiness
      responses:
        "200":
          description: System is ready to accept traffic
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "500":
          description: System not ready to accept traffic
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"

  /client/{teamId}/{projectId}/{environmentId}/lock:
    post:
      tags:
        - Environments
      summary: Lock the state of Terraform environment
      operationId: lockEnvironment
      parameters:
        - $ref: "#/components/parameters/teamId"
        - $ref: "#/components/parameters/projectId"
        - $ref: "#/components/parameters/environmentId"
      security:
        - basic_auth: [] # Use basic auth to lock the environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LockInfo"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LockInfo"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /client/{teamId}/{projectId}/{environmentId}/unlock:
    post:
      tags:
        - Environments
      summary: Unlock the state of Terraform environment
      operationId: unlockEnvironment
      parameters:
        - $ref: "#/components/parameters/teamId"
        - $ref: "#/components/parameters/projectId"
        - $ref: "#/components/parameters/environmentId"
      security:
        - basic_auth: [] # Use basic auth to unlock the environment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LockInfo"
      responses:
        "200":
          description: Successful response
        "204":
          description: Successful response
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /client/{teamId}/{projectId}/{environmentId}/state:
    get:
      tags:
        - Environments
      summary: Get the state of Terraform environment
      operationId: getEnvironmentState
      parameters:
        - $ref: "#/components/parameters/teamId"
        - $ref: "#/components/parameters/projectId"
        - $ref: "#/components/parameters/environmentId"
      security:
        - basic_auth: [] # Use basic auth to get the environment state
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payload"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Environments
      summary: Update the state of Terraform environment
      operationId: updateEnvironmentState
      parameters:
        - $ref: "#/components/parameters/teamId"
        - $ref: "#/components/parameters/projectId"
        - $ref: "#/components/parameters/environmentId"
      security:
        - basic_auth: [] # Use basic auth to update the environment state
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Payload"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payload"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/user:
    get:
      tags:
        - Users
      summary: Get a list of users
      security:
        - api_key: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                  metadata:
                    type: object
                    properties:
                      limit:
                        type: integer
                      offset:
                        type: integer
                      totalCount:
                        type: integer
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    post:
      tags:
        - Users
      summary: Create a new user
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/user/{id}:
    get:
      tags:
        - Users
      summary: Get a user
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags:
        - Users
      summary: Update a user
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags:
        - Users
      summary: Delete a user
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful response
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/team:
    post:
      tags:
        - Teams
      summary: Create a new team
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamCreate"
      responses:
        "201":
          description: Team created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    get:
      tags:
        - Teams
      summary: Get a list of teams
      security:
        - api_key: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    items:
                      $ref: "#/components/schemas/Team"
                  metadata:
                    type: object
                    properties:
                      limit:
                        type: integer
                      offset:
                        type: integer
                      totalCount:
                        type: integer
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/team/{id}:
    get:
      tags:
        - Teams
      summary: Get a team
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags:
        - Teams
      summary: Update a team
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamUpdate"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags:
        - Teams
      summary: Delete a team
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful response
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/project:
    post:
      tags:
        - Projects
      summary: Create a new project
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreate"
      responses:
        "201":
          description: Project created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    get:
      tags:
        - Projects
      summary: Get a list of projects
      security:
        - api_key: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: "#/components/schemas/Project"
                  metadata:
                    type: object
                    properties:
                      limit:
                        type: integer
                      offset:
                        type: integer
                      totalCount:
                        type: integer
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/project/{id}:
    get:
      tags:
        - Projects
      summary: Get a project
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags:
        - Projects
      summary: Update a project
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdate"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags:
        - Projects
      summary: Delete a project
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful response
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/project/{projectId}/environment:
    post:
      tags:
        - Environments
      summary: Create a new environment
      security:
        - api_key: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnvironmentCreate"
      responses:
        "201":
          description: Environment created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    get:
      tags:
        - Environments
      summary: Get a list of environments
      security:
        - api_key: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  environments:
                    type: array
                    items:
                      $ref: "#/components/schemas/Environment"
                  metadata:
                    type: object
                    properties:
                      limit:
                        type: integer
                      offset:
                        type: integer
                      totalCount:
                        type: integer
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/project/{projectId}/environment/{environmentId}:
    get:
      tags:
        - Environments
      summary: Get an environment
      security:
        - api_key: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: environmentId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags:
        - Environments
      summary: Update an environment
      security:
        - api_key: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: environmentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnvironmentUpdate"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Environment"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags:
        - Environments
      summary: Delete an environment
      security:
        - api_key: []
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: environmentId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful response
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/snapshot:
    post:
      tags:
        - Snapshots
      summary: Create a new snapshot
      security:
        - api_key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapshotCreate"
      responses:
        "201":
          description: Snapshot created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Snapshot"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    get:
      tags:
        - Snapshots
      summary: Get a list of snapshots
      security:
        - api_key: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  snapshots:
                    type: array
                    items:
                      $ref: "#/components/schemas/Snapshot"
                  metadata:
                    type: object
                    properties:
                      limit:
                        type: integer
                      offset:
                        type: integer
                      totalCount:
                        type: integer
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/snapshot/{id}:
    get:
      tags:
        - Snapshots
      summary: Get a snapshot
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Snapshot"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      tags:
        - Snapshots
      summary: Update a snapshot
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SnapshotUpdate"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Snapshot"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      tags:
        - Snapshots
      summary: Delete a snapshot
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Successful response
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/task/{id}:
    get:
      tags:
        - Tasks
      summary: Get a task
      security:
        - api_key: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  parameters:
    teamId:
      name: teamId
      in: path
      required: true
      schema:
        type: string
    projectId:
      name: projectId
      in: path
      required: true
      schema:
        type: string
    environmentId:
      name: environmentId
      in: path
      required: true
      schema:
        type: string

  schemas:
    LockInfo:
      type: object
      properties:
        id:
          type: string
        operation:
          type: string
        info:
          type: string
        who:
          type: string
        version:
          type: string
        created:
          type: string
          format: date-time
        path:
          type: string

    HealthResponse:
      type: object
      properties:
        status:
          type: string
        errorMessage:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
        role:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UserCreate:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        role:
          type: string
        password:
          type: string

    UserUpdate:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        role:
          type: string
        password:
          type: string

    Team:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        usersCount:
          type: integer
        projectsCount:
          type: integer
        description:
          type: string
        members:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TeamCreate:
      type: object
      properties:
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        members:
          type: array
          items:
            type: string

    TeamUpdate:
      type: object
      properties:
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        members:
          type: array
          items:
            type: string

    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        team:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            slug:
              type: string
        envCount:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProjectCreate:
      type: object
      properties:
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        team_id:
          type: integer

    ProjectUpdate:
      type: object
      properties:
        slug:
          type: string
        name:
          type: string
        description:
          type: string
        team_id:
          type: integer

    Environment:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        username:
          type: string
        isLocked:
          type: boolean
        stateVersion:
          type: integer
        project:
          type: object
          properties:
            id:
              type: string
        secret:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    EnvironmentCreate:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        username:
          type: string
        secret:
          type: string

    EnvironmentUpdate:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        username:
          type: string
        secret:
          type: string

    Snapshot:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        record_type:
          type: string
        record_uuid:
          type: string
        status:
          type: string
        team:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            slug:
              type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    SnapshotCreate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        record_type:
          type: string
        record_uuid:
          type: string
        team_id:
          type: integer

    SnapshotUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        team_id:
          type: integer

    Task:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        runAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string

    Payload:
      type: string
      format: binary

  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: x-api-key
    basic_auth:
      type: http
      scheme: basic
