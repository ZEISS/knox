// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BasicAuthScopes = "basicAuth.Scopes"
	OpenIdScopes    = "openId.Scopes"
)

// Environment defines model for Environment.
type Environment struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	IsLocked  *bool      `json:"isLocked,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Project   *struct {
		Id *string `json:"id,omitempty"`
	} `json:"project,omitempty"`
	Secret       *string    `json:"secret,omitempty"`
	StateVersion *int       `json:"stateVersion,omitempty"`
	UpdatedAt    *time.Time `json:"updatedAt,omitempty"`
	Username     *string    `json:"username,omitempty"`
}

// EnvironmentCreate defines model for EnvironmentCreate.
type EnvironmentCreate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Username *string `json:"username,omitempty"`
}

// EnvironmentUpdate defines model for EnvironmentUpdate.
type EnvironmentUpdate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Username *string `json:"username,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Status       *string `json:"status,omitempty"`
}

// LockInfo defines model for LockInfo.
type LockInfo struct {
	Created   *time.Time          `json:"created,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Info      *string             `json:"info,omitempty"`
	Operation *string             `json:"operation,omitempty"`
	Path      *string             `json:"path,omitempty"`
	Version   *string             `json:"version,omitempty"`
	Who       *string             `json:"who,omitempty"`
}

// Payload defines model for Payload.
type Payload = map[string]interface{}

// Project defines model for Project.
type Project struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	EnvCount    *int       `json:"envCount,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Name        *string    `json:"name,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
	} `json:"team,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// ProjectCreate defines model for ProjectCreate.
type ProjectCreate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// ProjectUpdate defines model for ProjectUpdate.
type ProjectUpdate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// Snapshot defines model for Snapshot.
type Snapshot struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	RecordType  *string    `json:"record_type,omitempty"`
	RecordUuid  *string    `json:"record_uuid,omitempty"`
	Status      *string    `json:"status,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
	} `json:"team,omitempty"`
	Title     *string    `json:"title,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SnapshotCreate defines model for SnapshotCreate.
type SnapshotCreate struct {
	Description *string             `json:"description,omitempty"`
	StateId     *openapi_types.UUID `json:"state_id,omitempty"`
	Title       *string             `json:"title,omitempty"`
}

// SnapshotUpdate defines model for SnapshotUpdate.
type SnapshotUpdate struct {
	Description *string `json:"description,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// Team defines model for Team.
type Team struct {
	CreatedAt     *time.Time `json:"createdAt,omitempty"`
	Description   *string    `json:"description,omitempty"`
	Id            *string    `json:"id,omitempty"`
	Members       *[]string  `json:"members,omitempty"`
	Name          *string    `json:"name,omitempty"`
	ProjectsCount *int       `json:"projectsCount,omitempty"`
	UpdatedAt     *time.Time `json:"updatedAt,omitempty"`
	UsersCount    *int       `json:"usersCount,omitempty"`
}

// TeamCreate defines model for TeamCreate.
type TeamCreate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
}

// TeamUpdate defines model for TeamUpdate.
type TeamUpdate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
}

// EnvironmentId defines model for environmentId.
type EnvironmentId = openapi_types.UUID

// EnvironmentName defines model for environmentName.
type EnvironmentName = string

// Limit defines model for limit.
type Limit = int

// Offset defines model for offset.
type Offset = int

// ProjectId defines model for projectId.
type ProjectId = openapi_types.UUID

// ProjectName defines model for projectName.
type ProjectName = string

// SnapshotId defines model for snapshotId.
type SnapshotId = openapi_types.UUID

// TeamId defines model for teamId.
type TeamId = openapi_types.UUID

// TeamName defines model for teamName.
type TeamName = string

// GetTeamsParams defines parameters for GetTeams.
type GetTeamsParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetProjectsParams defines parameters for GetProjects.
type GetProjectsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetEnvironmentsParams defines parameters for GetEnvironments.
type GetEnvironmentsParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetSnapshotsParams defines parameters for GetSnapshots.
type GetSnapshotsParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// LockEnvironmentJSONRequestBody defines body for LockEnvironment for application/json ContentType.
type LockEnvironmentJSONRequestBody = LockInfo

// UpdateEnvironmentStateJSONRequestBody defines body for UpdateEnvironmentState for application/json ContentType.
type UpdateEnvironmentStateJSONRequestBody = Payload

// UnlockEnvironmentJSONRequestBody defines body for UnlockEnvironment for application/json ContentType.
type UnlockEnvironmentJSONRequestBody = LockInfo

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = TeamCreate

// UpdateTeamJSONRequestBody defines body for UpdateTeam for application/json ContentType.
type UpdateTeamJSONRequestBody = TeamUpdate

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = ProjectCreate

// UpdateProjectJSONRequestBody defines body for UpdateProject for application/json ContentType.
type UpdateProjectJSONRequestBody = ProjectUpdate

// CreateEnvironmentJSONRequestBody defines body for CreateEnvironment for application/json ContentType.
type CreateEnvironmentJSONRequestBody = EnvironmentCreate

// UpdateEnvironmentJSONRequestBody defines body for UpdateEnvironment for application/json ContentType.
type UpdateEnvironmentJSONRequestBody = EnvironmentUpdate

// CreateSnapshotJSONRequestBody defines body for CreateSnapshot for application/json ContentType.
type CreateSnapshotJSONRequestBody = SnapshotCreate

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
