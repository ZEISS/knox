// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	Basic_authScopes = "basic_auth.Scopes"
)

// Environment defines model for Environment.
type Environment struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	IsLocked  *bool      `json:"isLocked,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Project   *struct {
		Id *string `json:"id,omitempty"`
	} `json:"project,omitempty"`
	Secret       *string    `json:"secret,omitempty"`
	Slug         *string    `json:"slug,omitempty"`
	StateVersion *int       `json:"stateVersion,omitempty"`
	UpdatedAt    *time.Time `json:"updatedAt,omitempty"`
	Username     *string    `json:"username,omitempty"`
}

// EnvironmentCreate defines model for EnvironmentCreate.
type EnvironmentCreate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Slug     *string `json:"slug,omitempty"`
	Username *string `json:"username,omitempty"`
}

// EnvironmentUpdate defines model for EnvironmentUpdate.
type EnvironmentUpdate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Slug     *string `json:"slug,omitempty"`
	Username *string `json:"username,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Status       *string `json:"status,omitempty"`
}

// LockInfo defines model for LockInfo.
type LockInfo struct {
	Created   *time.Time          `json:"created,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Info      *string             `json:"info,omitempty"`
	Operation *string             `json:"operation,omitempty"`
	Path      *string             `json:"path,omitempty"`
	Version   *string             `json:"version,omitempty"`
	Who       *string             `json:"who,omitempty"`
}

// Payload defines model for Payload.
type Payload = map[string]interface{}

// Project defines model for Project.
type Project struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	EnvCount    *int       `json:"envCount,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Name        *string    `json:"name,omitempty"`
	Slug        *string    `json:"slug,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
		Slug *string `json:"slug,omitempty"`
	} `json:"team,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// ProjectCreate defines model for ProjectCreate.
type ProjectCreate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	Slug        *string `json:"slug,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// ProjectUpdate defines model for ProjectUpdate.
type ProjectUpdate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	Slug        *string `json:"slug,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// Snapshot defines model for Snapshot.
type Snapshot struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	RecordType  *string    `json:"record_type,omitempty"`
	RecordUuid  *string    `json:"record_uuid,omitempty"`
	Status      *string    `json:"status,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
		Slug *string `json:"slug,omitempty"`
	} `json:"team,omitempty"`
	Title     *string    `json:"title,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SnapshotCreate defines model for SnapshotCreate.
type SnapshotCreate struct {
	Description *string             `json:"description,omitempty"`
	StateId     *openapi_types.UUID `json:"state_id,omitempty"`
	Title       *string             `json:"title,omitempty"`
}

// SnapshotUpdate defines model for SnapshotUpdate.
type SnapshotUpdate struct {
	Description *string `json:"description,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// Task defines model for Task.
type Task struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	RunAt     *time.Time `json:"runAt,omitempty"`
	Status    *string    `json:"status,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Team defines model for Team.
type Team struct {
	CreatedAt     *time.Time `json:"createdAt,omitempty"`
	Description   *string    `json:"description,omitempty"`
	Id            *string    `json:"id,omitempty"`
	Members       *[]string  `json:"members,omitempty"`
	Name          *string    `json:"name,omitempty"`
	ProjectsCount *int       `json:"projectsCount,omitempty"`
	Slug          *string    `json:"slug,omitempty"`
	UpdatedAt     *time.Time `json:"updatedAt,omitempty"`
	UsersCount    *int       `json:"usersCount,omitempty"`
}

// TeamCreate defines model for TeamCreate.
type TeamCreate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Slug        *string   `json:"slug,omitempty"`
}

// TeamUpdate defines model for TeamUpdate.
type TeamUpdate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Slug        *string   `json:"slug,omitempty"`
}

// User defines model for User.
type User struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Email     *string    `json:"email,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Role      *string    `json:"role,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// UserCreate defines model for UserCreate.
type UserCreate struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	Role     *string `json:"role,omitempty"`
}

// UserUpdate defines model for UserUpdate.
type UserUpdate struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	Role     *string `json:"role,omitempty"`
}

// EnvironmentId defines model for environmentId.
type EnvironmentId = string

// Limit defines model for limit.
type Limit = int

// LockId defines model for lockId.
type LockId = openapi_types.UUID

// Offset defines model for offset.
type Offset = int

// ProjectId defines model for projectId.
type ProjectId = string

// TeamId defines model for teamId.
type TeamId = string

// UpdateEnvironmentStateParams defines parameters for UpdateEnvironmentState.
type UpdateEnvironmentStateParams struct {
	ID *LockId `form:"ID,omitempty" json:"ID,omitempty"`
}

// GetSnapshotsParams defines parameters for GetSnapshots.
type GetSnapshotsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetTeamsParams defines parameters for GetTeams.
type GetTeamsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetProjectsParams defines parameters for GetProjects.
type GetProjectsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetEnvironmentsParams defines parameters for GetEnvironments.
type GetEnvironmentsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetUsersParams defines parameters for GetUsers.
type GetUsersParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// LockEnvironmentJSONRequestBody defines body for LockEnvironment for application/json ContentType.
type LockEnvironmentJSONRequestBody = LockInfo

// UpdateEnvironmentStateJSONRequestBody defines body for UpdateEnvironmentState for application/json ContentType.
type UpdateEnvironmentStateJSONRequestBody = Payload

// UnlockEnvironmentJSONRequestBody defines body for UnlockEnvironment for application/json ContentType.
type UnlockEnvironmentJSONRequestBody = LockInfo

// CreateSnapshotJSONRequestBody defines body for CreateSnapshot for application/json ContentType.
type CreateSnapshotJSONRequestBody = SnapshotCreate

// UpdateSnapshotJSONRequestBody defines body for UpdateSnapshot for application/json ContentType.
type UpdateSnapshotJSONRequestBody = SnapshotUpdate

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = TeamCreate

// UpdateTeamJSONRequestBody defines body for UpdateTeam for application/json ContentType.
type UpdateTeamJSONRequestBody = TeamUpdate

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = ProjectCreate

// UpdateProjectJSONRequestBody defines body for UpdateProject for application/json ContentType.
type UpdateProjectJSONRequestBody = ProjectUpdate

// CreateEnvironmentJSONRequestBody defines body for CreateEnvironment for application/json ContentType.
type CreateEnvironmentJSONRequestBody = EnvironmentCreate

// UpdateEnvironmentJSONRequestBody defines body for UpdateEnvironment for application/json ContentType.
type UpdateEnvironmentJSONRequestBody = EnvironmentUpdate

// PostUserJSONRequestBody defines body for PostUser for application/json ContentType.
type PostUserJSONRequestBody = UserCreate

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = UserUpdate

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"gw0TcvV++X6Jdle7fwMAAP//59PjtlRkAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
