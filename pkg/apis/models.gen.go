// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	Basic_authScopes = "basic_auth.Scopes"
)

// Environment defines model for Environment.
type Environment struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	IsLocked  *bool      `json:"isLocked,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Project   *struct {
		Id *string `json:"id,omitempty"`
	} `json:"project,omitempty"`
	Secret       *string    `json:"secret,omitempty"`
	StateVersion *int       `json:"stateVersion,omitempty"`
	UpdatedAt    *time.Time `json:"updatedAt,omitempty"`
	Username     *string    `json:"username,omitempty"`
}

// EnvironmentCreate defines model for EnvironmentCreate.
type EnvironmentCreate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Username *string `json:"username,omitempty"`
}

// EnvironmentUpdate defines model for EnvironmentUpdate.
type EnvironmentUpdate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Username *string `json:"username,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Status       *string `json:"status,omitempty"`
}

// LockInfo defines model for LockInfo.
type LockInfo struct {
	Created   *time.Time          `json:"created,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Info      *string             `json:"info,omitempty"`
	Operation *string             `json:"operation,omitempty"`
	Path      *string             `json:"path,omitempty"`
	Version   *string             `json:"version,omitempty"`
	Who       *string             `json:"who,omitempty"`
}

// Payload defines model for Payload.
type Payload = map[string]interface{}

// Project defines model for Project.
type Project struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	EnvCount    *int       `json:"envCount,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Name        *string    `json:"name,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
		Slug *string `json:"slug,omitempty"`
	} `json:"team,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// ProjectCreate defines model for ProjectCreate.
type ProjectCreate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// ProjectUpdate defines model for ProjectUpdate.
type ProjectUpdate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// Snapshot defines model for Snapshot.
type Snapshot struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	RecordType  *string    `json:"record_type,omitempty"`
	RecordUuid  *string    `json:"record_uuid,omitempty"`
	Status      *string    `json:"status,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
		Slug *string `json:"slug,omitempty"`
	} `json:"team,omitempty"`
	Title     *string    `json:"title,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SnapshotCreate defines model for SnapshotCreate.
type SnapshotCreate struct {
	Description *string             `json:"description,omitempty"`
	StateId     *openapi_types.UUID `json:"state_id,omitempty"`
	Title       *string             `json:"title,omitempty"`
}

// SnapshotUpdate defines model for SnapshotUpdate.
type SnapshotUpdate struct {
	Description *string `json:"description,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// Task defines model for Task.
type Task struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	RunAt     *time.Time `json:"runAt,omitempty"`
	Status    *string    `json:"status,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Team defines model for Team.
type Team struct {
	CreatedAt     *time.Time `json:"createdAt,omitempty"`
	Description   *string    `json:"description,omitempty"`
	Id            *string    `json:"id,omitempty"`
	Members       *[]string  `json:"members,omitempty"`
	Name          *string    `json:"name,omitempty"`
	ProjectsCount *int       `json:"projectsCount,omitempty"`
	Slug          *string    `json:"slug,omitempty"`
	UpdatedAt     *time.Time `json:"updatedAt,omitempty"`
	UsersCount    *int       `json:"usersCount,omitempty"`
}

// TeamCreate defines model for TeamCreate.
type TeamCreate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Slug        *string   `json:"slug,omitempty"`
}

// TeamUpdate defines model for TeamUpdate.
type TeamUpdate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Slug        *string   `json:"slug,omitempty"`
}

// User defines model for User.
type User struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Email     *string    `json:"email,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Role      *string    `json:"role,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// UserCreate defines model for UserCreate.
type UserCreate struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	Role     *string `json:"role,omitempty"`
}

// UserUpdate defines model for UserUpdate.
type UserUpdate struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	Role     *string `json:"role,omitempty"`
}

// EnvironmentId defines model for environmentId.
type EnvironmentId = string

// Limit defines model for limit.
type Limit = int

// LockId defines model for lockId.
type LockId = openapi_types.UUID

// Offset defines model for offset.
type Offset = int

// ProjectId defines model for projectId.
type ProjectId = string

// TeamId defines model for teamId.
type TeamId = string

// UpdateEnvironmentStateParams defines parameters for UpdateEnvironmentState.
type UpdateEnvironmentStateParams struct {
	ID *LockId `form:"ID,omitempty" json:"ID,omitempty"`
}

// GetSnapshotsParams defines parameters for GetSnapshots.
type GetSnapshotsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetTeamsParams defines parameters for GetTeams.
type GetTeamsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetProjectsParams defines parameters for GetProjects.
type GetProjectsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetEnvironmentsParams defines parameters for GetEnvironments.
type GetEnvironmentsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetUsersParams defines parameters for GetUsers.
type GetUsersParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// LockEnvironmentJSONRequestBody defines body for LockEnvironment for application/json ContentType.
type LockEnvironmentJSONRequestBody = LockInfo

// UpdateEnvironmentStateJSONRequestBody defines body for UpdateEnvironmentState for application/json ContentType.
type UpdateEnvironmentStateJSONRequestBody = Payload

// UnlockEnvironmentJSONRequestBody defines body for UnlockEnvironment for application/json ContentType.
type UnlockEnvironmentJSONRequestBody = LockInfo

// CreateSnapshotJSONRequestBody defines body for CreateSnapshot for application/json ContentType.
type CreateSnapshotJSONRequestBody = SnapshotCreate

// UpdateSnapshotJSONRequestBody defines body for UpdateSnapshot for application/json ContentType.
type UpdateSnapshotJSONRequestBody = SnapshotUpdate

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = TeamCreate

// UpdateTeamJSONRequestBody defines body for UpdateTeam for application/json ContentType.
type UpdateTeamJSONRequestBody = TeamUpdate

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = ProjectCreate

// UpdateProjectJSONRequestBody defines body for UpdateProject for application/json ContentType.
type UpdateProjectJSONRequestBody = ProjectUpdate

// CreateEnvironmentJSONRequestBody defines body for CreateEnvironment for application/json ContentType.
type CreateEnvironmentJSONRequestBody = EnvironmentCreate

// UpdateEnvironmentJSONRequestBody defines body for UpdateEnvironment for application/json ContentType.
type UpdateEnvironmentJSONRequestBody = EnvironmentUpdate

// PostUserJSONRequestBody defines body for PostUser for application/json ContentType.
type PostUserJSONRequestBody = UserCreate

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = UserUpdate

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
