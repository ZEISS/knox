// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BasicAuthScopes = "BasicAuth.Scopes"
	OpenIDScopes    = "OpenID.Scopes"
)

// Environment defines model for Environment.
type Environment struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	IsLocked  *bool      `json:"isLocked,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Project   *struct {
		Id *string `json:"id,omitempty"`
	} `json:"project,omitempty"`
	Secret       *string    `json:"secret,omitempty"`
	StateVersion *int       `json:"stateVersion,omitempty"`
	UpdatedAt    *time.Time `json:"updatedAt,omitempty"`
	Username     *string    `json:"username,omitempty"`
}

// EnvironmentCreate defines model for EnvironmentCreate.
type EnvironmentCreate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Username *string `json:"username,omitempty"`
}

// EnvironmentUpdate defines model for EnvironmentUpdate.
type EnvironmentUpdate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Username *string `json:"username,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Status       *string `json:"status,omitempty"`
}

// LockInfo defines model for LockInfo.
type LockInfo struct {
	Created   *time.Time          `json:"created,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Info      *string             `json:"info,omitempty"`
	Operation *string             `json:"operation,omitempty"`
	Path      *string             `json:"path,omitempty"`
	Version   *string             `json:"version,omitempty"`
	Who       *string             `json:"who,omitempty"`
}

// Payload defines model for Payload.
type Payload = map[string]interface{}

// Project defines model for Project.
type Project struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	EnvCount    *int       `json:"envCount,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Name        *string    `json:"name,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
		Slug *string `json:"slug,omitempty"`
	} `json:"team,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// ProjectCreate defines model for ProjectCreate.
type ProjectCreate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// ProjectUpdate defines model for ProjectUpdate.
type ProjectUpdate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// Snapshot defines model for Snapshot.
type Snapshot struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	RecordType  *string    `json:"record_type,omitempty"`
	RecordUuid  *string    `json:"record_uuid,omitempty"`
	Status      *string    `json:"status,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
		Slug *string `json:"slug,omitempty"`
	} `json:"team,omitempty"`
	Title     *string    `json:"title,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SnapshotCreate defines model for SnapshotCreate.
type SnapshotCreate struct {
	Description *string             `json:"description,omitempty"`
	StateId     *openapi_types.UUID `json:"state_id,omitempty"`
	Title       *string             `json:"title,omitempty"`
}

// SnapshotUpdate defines model for SnapshotUpdate.
type SnapshotUpdate struct {
	Description *string `json:"description,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// Task defines model for Task.
type Task struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	RunAt     *time.Time `json:"runAt,omitempty"`
	Status    *string    `json:"status,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Team defines model for Team.
type Team struct {
	CreatedAt     *time.Time `json:"createdAt,omitempty"`
	Description   *string    `json:"description,omitempty"`
	Id            *string    `json:"id,omitempty"`
	Members       *[]string  `json:"members,omitempty"`
	Name          *string    `json:"name,omitempty"`
	ProjectsCount *int       `json:"projectsCount,omitempty"`
	Slug          *string    `json:"slug,omitempty"`
	UpdatedAt     *time.Time `json:"updatedAt,omitempty"`
	UsersCount    *int       `json:"usersCount,omitempty"`
}

// TeamCreate defines model for TeamCreate.
type TeamCreate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Slug        *string   `json:"slug,omitempty"`
}

// TeamUpdate defines model for TeamUpdate.
type TeamUpdate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Slug        *string   `json:"slug,omitempty"`
}

// User defines model for User.
type User struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Email     *string    `json:"email,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Role      *string    `json:"role,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// UserCreate defines model for UserCreate.
type UserCreate struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	Role     *string `json:"role,omitempty"`
}

// UserUpdate defines model for UserUpdate.
type UserUpdate struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	Role     *string `json:"role,omitempty"`
}

// EnvironmentId defines model for environmentId.
type EnvironmentId = string

// Limit defines model for limit.
type Limit = int

// LockId defines model for lockId.
type LockId = openapi_types.UUID

// Offset defines model for offset.
type Offset = int

// ProjectId defines model for projectId.
type ProjectId = string

// TeamId defines model for teamId.
type TeamId = string

// UpdateEnvironmentStateParams defines parameters for UpdateEnvironmentState.
type UpdateEnvironmentStateParams struct {
	ID *LockId `form:"ID,omitempty" json:"ID,omitempty"`
}

// GetSnapshotsParams defines parameters for GetSnapshots.
type GetSnapshotsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetTeamsParams defines parameters for GetTeams.
type GetTeamsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetProjectsParams defines parameters for GetProjects.
type GetProjectsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetEnvironmentsParams defines parameters for GetEnvironments.
type GetEnvironmentsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetUsersParams defines parameters for GetUsers.
type GetUsersParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// LockEnvironmentJSONRequestBody defines body for LockEnvironment for application/json ContentType.
type LockEnvironmentJSONRequestBody = LockInfo

// UpdateEnvironmentStateJSONRequestBody defines body for UpdateEnvironmentState for application/json ContentType.
type UpdateEnvironmentStateJSONRequestBody = Payload

// UnlockEnvironmentJSONRequestBody defines body for UnlockEnvironment for application/json ContentType.
type UnlockEnvironmentJSONRequestBody = LockInfo

// CreateSnapshotJSONRequestBody defines body for CreateSnapshot for application/json ContentType.
type CreateSnapshotJSONRequestBody = SnapshotCreate

// UpdateSnapshotJSONRequestBody defines body for UpdateSnapshot for application/json ContentType.
type UpdateSnapshotJSONRequestBody = SnapshotUpdate

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = TeamCreate

// UpdateTeamJSONRequestBody defines body for UpdateTeam for application/json ContentType.
type UpdateTeamJSONRequestBody = TeamUpdate

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = ProjectCreate

// UpdateProjectJSONRequestBody defines body for UpdateProject for application/json ContentType.
type UpdateProjectJSONRequestBody = ProjectUpdate

// CreateEnvironmentJSONRequestBody defines body for CreateEnvironment for application/json ContentType.
type CreateEnvironmentJSONRequestBody = EnvironmentCreate

// UpdateEnvironmentJSONRequestBody defines body for UpdateEnvironment for application/json ContentType.
type UpdateEnvironmentJSONRequestBody = EnvironmentUpdate

// PostUserJSONRequestBody defines body for PostUser for application/json ContentType.
type PostUserJSONRequestBody = UserCreate

// UpdateUserJSONRequestBody defines body for UpdateUser for application/json ContentType.
type UpdateUserJSONRequestBody = UserUpdate

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/wcAAP//jBC3S+5kAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
