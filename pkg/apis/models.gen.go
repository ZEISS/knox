// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BasicAuthScopes = "basicAuth.Scopes"
	OpenIdScopes    = "openId.Scopes"
)

// Environment defines model for Environment.
type Environment struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	IsLocked  *bool      `json:"isLocked,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Project   *struct {
		Id *string `json:"id,omitempty"`
	} `json:"project,omitempty"`
	Secret       *string    `json:"secret,omitempty"`
	StateVersion *int       `json:"stateVersion,omitempty"`
	UpdatedAt    *time.Time `json:"updatedAt,omitempty"`
	Username     *string    `json:"username,omitempty"`
}

// EnvironmentCreate defines model for EnvironmentCreate.
type EnvironmentCreate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Username *string `json:"username,omitempty"`
}

// EnvironmentUpdate defines model for EnvironmentUpdate.
type EnvironmentUpdate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Username *string `json:"username,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Status       *string `json:"status,omitempty"`
}

// LockInfo defines model for LockInfo.
type LockInfo struct {
	Created   *time.Time          `json:"created,omitempty"`
	Id        *openapi_types.UUID `json:"id,omitempty"`
	Info      *string             `json:"info,omitempty"`
	Operation *string             `json:"operation,omitempty"`
	Path      *string             `json:"path,omitempty"`
	Version   *string             `json:"version,omitempty"`
	Who       *string             `json:"who,omitempty"`
}

// Payload defines model for Payload.
type Payload = map[string]interface{}

// Project defines model for Project.
type Project struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	EnvCount    *int       `json:"envCount,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Name        *string    `json:"name,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
	} `json:"team,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// ProjectCreate defines model for ProjectCreate.
type ProjectCreate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// ProjectUpdate defines model for ProjectUpdate.
type ProjectUpdate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// Snapshot defines model for Snapshot.
type Snapshot struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	DeletedAt   *time.Time `json:"deletedAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Title       *string    `json:"title,omitempty"`
	UpdatedAt   *time.Time `json:"updatedAt,omitempty"`
	Version     *int       `json:"version,omitempty"`
}

// SnapshotCreate defines model for SnapshotCreate.
type SnapshotCreate struct {
	Description *string             `json:"description,omitempty"`
	StateId     *openapi_types.UUID `json:"state_id,omitempty"`
	Title       *string             `json:"title,omitempty"`
}

// SnapshotUpdate defines model for SnapshotUpdate.
type SnapshotUpdate struct {
	Description *string `json:"description,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// State defines model for State.
type State struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	State     *string    `json:"state,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	Version   *int       `json:"version,omitempty"`
}

// Team defines model for Team.
type Team struct {
	CreatedAt     *time.Time `json:"createdAt,omitempty"`
	Description   *string    `json:"description,omitempty"`
	Id            *string    `json:"id,omitempty"`
	Members       *[]string  `json:"members,omitempty"`
	Name          *string    `json:"name,omitempty"`
	ProjectsCount *int       `json:"projectsCount,omitempty"`
	UpdatedAt     *time.Time `json:"updatedAt,omitempty"`
	UsersCount    *int       `json:"usersCount,omitempty"`
}

// TeamCreate defines model for TeamCreate.
type TeamCreate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
}

// TeamUpdate defines model for TeamUpdate.
type TeamUpdate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
}

// EnvironmentName defines model for environmentName.
type EnvironmentName = string

// Limit defines model for limit.
type Limit = int

// Offset defines model for offset.
type Offset = int

// ProjectName defines model for projectName.
type ProjectName = string

// SnapshotId defines model for snapshotId.
type SnapshotId = openapi_types.UUID

// TeamName defines model for teamName.
type TeamName = string

// GetTeamsParams defines parameters for GetTeams.
type GetTeamsParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetProjectsParams defines parameters for GetProjects.
type GetProjectsParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetEnvironmentsParams defines parameters for GetEnvironments.
type GetEnvironmentsParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetSnapshotsParams defines parameters for GetSnapshots.
type GetSnapshotsParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetStatesParams defines parameters for GetStates.
type GetStatesParams struct {
	Limit  *Limit  `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *Offset `form:"offset,omitempty" json:"offset,omitempty"`
}

// LockEnvironmentJSONRequestBody defines body for LockEnvironment for application/json ContentType.
type LockEnvironmentJSONRequestBody = LockInfo

// UpdateEnvironmentStateJSONRequestBody defines body for UpdateEnvironmentState for application/json ContentType.
type UpdateEnvironmentStateJSONRequestBody = Payload

// UnlockEnvironmentJSONRequestBody defines body for UnlockEnvironment for application/json ContentType.
type UnlockEnvironmentJSONRequestBody = LockInfo

// CreateTeamJSONRequestBody defines body for CreateTeam for application/json ContentType.
type CreateTeamJSONRequestBody = TeamCreate

// UpdateTeamJSONRequestBody defines body for UpdateTeam for application/json ContentType.
type UpdateTeamJSONRequestBody = TeamUpdate

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = ProjectCreate

// UpdateProjectJSONRequestBody defines body for UpdateProject for application/json ContentType.
type UpdateProjectJSONRequestBody = ProjectUpdate

// CreateEnvironmentJSONRequestBody defines body for CreateEnvironment for application/json ContentType.
type CreateEnvironmentJSONRequestBody = EnvironmentCreate

// UpdateEnvironmentJSONRequestBody defines body for UpdateEnvironment for application/json ContentType.
type UpdateEnvironmentJSONRequestBody = EnvironmentUpdate

// CreateSnapshotJSONRequestBody defines body for CreateSnapshot for application/json ContentType.
type CreateSnapshotJSONRequestBody = SnapshotCreate

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xcW3PbuBX+Kxi0j4ypbLczO3pLt5dNu+1kYm/7kHgciDwSsSEBLgDa63j03zsAeBWv",
	"kklJlvlmE7eDc75z5RGfsMejmDNgSuLlE46JIBEoEOY/YPdUcBYBU/8hEehHlOEljokKsIOZeVab5WAB",
	"vyVUgI+XSiTgYOkFEBG9XD3GeolUgrIN3m4dHNKIKj3kw5okocLLtwvHHvNbAuKxOMfObNiNMgUbEGY7",
	"vl5LqO7Xsl06s2e/WPBfweu6fnnGfleXjMQy4Oq937J1aULXzmsuIqLwEicJ1TPrJykgUccV8uF96N9m",
	"gwYqfytAYHAkeAxCUTCDngCiwH+nKtT6RMEbRc2xO5s7mPoNZzqYyp+59xXKgyvOQyBMj7L0irVlqYzq",
	"lDUes83p4SuzTF8VPGFxVdtcKqLgvyAk5awJRQ5OYn/f+ycSRMt1msgrsf9Hw+z6VVuZ03G1w6n4xVz5",
	"NFQIwcVHkDFnsoEC0MP/BinJZuiOPwEJVXDwlhYiiRx4mkb4e7bmrXq0rxb12AdtHu1ptQF9OFFVXJe0",
	"ShuRpoH7mjIUYw8BH8iHD+Qx5KR6gxVlxBjx+uw2FT/A+PggPUHj1osDu/+RJ0w1a3uL6WpFvra+Ay1T",
	"6y5N/Nvb6mzb2dpmVPo4tQe56UlthuPAkyx77yrcLPv3GhnXqc8dCUghjIy9FlwoqsLm+x/gfO7bnVkX",
	"yw4FiXGgdwNtVdtFuwg7FFMd0NmTENV4/nEQ1YIYmdF0AsTcNJq8CSx1y90jiFZpjkMVRLJZ+vYBEYI8",
	"DokuZYdPODACbN+yjauH6uCYHGmj7VA1nJY2G3smgqrHa53PWJpWRFLvXWIDHJPnmFxDPy2EFSgVp2ES",
	"s0ncCogA8fdMwP/8302WYJrlZnR3/bYUgVVYgW8CKhGVSAWA/sX47+jdh/dIxuDRNfVMXHZln1OJCJIg",
	"7qkHSAVEoYgwsgGJbkAIogGHSmm6RIT5KMsu5dVn9pndBCDAbMQQuSc0JKsQ0E8QRsgLiFBozYU5zMz+",
	"8uWLDCAMP7NAzxAQc0R8H33V1OhryaXrfgMq5dWGqiBZXVHu6kFXz3fNjrK82CpI+kQCEV5gB/Qic95n",
	"hnOjizUhuGR28NurxdUikwWJKV7iP10trt5iG6Yambp3gQnk9d8bm2vkAa4WH/4HKBvqm0TYRvtm5XeL",
	"hTFQnKk0wSVxHKYycH+VFrhFrvxHAWu8xH9wi+qKmybL7k4yYcRfFfv1o1QQaVlYeg2e/3wiEnz+wKyS",
	"JFGkY2/DJiTtBEsgSvMbByuykXj5Cf9M74GBlPhWL3XvBBD/sYvvH82EM2G7oRYpjojnQayQEmS9pt7J",
	"xMC4aqepTTR6ATUyKMTyMX9m5eKFFJhyn7IC0NZ9KpWztu7TTm1v64bc+2osOJcNgtSpa7kS5FQKip+a",
	"2VFMcfNC1NbpnVuuuw2Yvlul3N7aYhdI9RdusTmKUPPsfWvkORmey+fUYJN4Hki5TkIkcnQ5+PvF96Md",
	"Xy2yNNDwESRPhAcGvGueMH9s9ekl4T1TIBgJ0TWIexDILKg4fIPJkqv/dKthUaiTZrLxviZYRnzd7E9L",
	"GlZC/+FKlofmbdaydIpNLc5e0SbSgqxGNCvBdEqgfcpzdMBpcRY2HXh5UB7fZ5RQvJ2V5UUriwX1CXxG",
	"wrpDs1/M+Byc9QVng/TiO6sXsw5No0MGqs/WIY1X2RVF3ZgJ+6qBbUMYAOq0weDZ8U+1WBaBIj5RDSN5",
	"J0W9/Fh0RTTUsbki4V51xpyxeTWuCzCm1lsr0DXU4YY6pXNEc1YBbIqdCAqpVBrEKgVcBloLwFsH//5m",
	"TVcg3pBEBd/erDeG7pQx+UtzvAn5ioRp24aMiWcKmybbx8aahfm72nQF8SPKsmKy4VSigruM8dT3djYz",
	"0wwXmp2IrS4biU5joEsl7EYT/XbUk5oErp+j7EX7C0Ob5RwiiMGDAdsBWCv3g33q7hbSh08OxdySl4Ih",
	"63tDsElyFaJ/Nc9TiB4a4NRN9uzvJ8KslRcil4JXpzPcGBWTi8mN4Qzx8YKAZnxrV5u0FkfGgMw0Tjp9",
	"lztxxWLG5ZS4TGsVrdBscr1ZZt+ZWH3I5jyrxDCsB7zSNl7PXp6G9n6X28Vr21xcCleW4qAsLmuvnBM5",
	"ncjFBcAzpckxf9uTPWWcPDuzXm31nDj9yvFUl1Q6dBFJWJwLuwEnnfa1WvDtz3ieD6s9q7pzjnT8HKkL",
	"TqNmSk7vT512k6mCNAkaMooLvMTu0bKrM8D/4hjWcdao8dz5xaiTAOKnjcZ7F3rbs8/TqNRkgc1xUtZZ",
	"dY+VtY4VW5XfPsuBXVfynN6en/iN5C77BuWT5UaEhu79k6fIrzKthSrAm9+tvxrH2JHDn6SNZiLvWP/p",
	"+MSpf0X164guDV9ECWBIv8qL0qkHQdVBOnWoT653u/WXQ15Uo9tcRTlmFYWdpUo6g76ts6u51ZtM7BEH",
	"xMWv9ocIPU5t1uDRotVZfcev9LzytvD6d4smLhLN1uKIhaLXbTDOIFp38y8NdFXXrvNJ52yBnPn3Ab3N",
	"JRVxD6oG5h9dusT2kpZimyzhPTNJhQ70dZHkHHuF7nrne1MTl6sKbDYgLx27iEKVLCDVhMcp/IH7VHzi",
	"dEBR50WAvn9J6bOuc/3nBF00PUB3ekOUi8bf4jiWc4b0aK/vjmi4FVHQHcXbGXMI/4wQvuDysODZfDZj",
	"zMh51sK9tXCvH6unSjIXKWs1B8NyLQN74USE6WcS5dJ1Q+6RMOBSLX9Y/LDA29vt/wMAAP//wpowj79g",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
