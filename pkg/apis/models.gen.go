// Package apis provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package apis

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	Api_keyScopes    = "api_key.Scopes"
	Basic_authScopes = "basic_auth.Scopes"
)

// Environment defines model for Environment.
type Environment struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	IsLocked  *bool      `json:"isLocked,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Project   *struct {
		Id *string `json:"id,omitempty"`
	} `json:"project,omitempty"`
	Secret       *string    `json:"secret,omitempty"`
	Slug         *string    `json:"slug,omitempty"`
	StateVersion *int       `json:"stateVersion,omitempty"`
	UpdatedAt    *time.Time `json:"updatedAt,omitempty"`
	Username     *string    `json:"username,omitempty"`
}

// EnvironmentCreate defines model for EnvironmentCreate.
type EnvironmentCreate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Slug     *string `json:"slug,omitempty"`
	Username *string `json:"username,omitempty"`
}

// EnvironmentUpdate defines model for EnvironmentUpdate.
type EnvironmentUpdate struct {
	Name     *string `json:"name,omitempty"`
	Secret   *string `json:"secret,omitempty"`
	Slug     *string `json:"slug,omitempty"`
	Username *string `json:"username,omitempty"`
}

// ErrorResponse defines model for ErrorResponse.
type ErrorResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// HealthResponse defines model for HealthResponse.
type HealthResponse struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Status       *string `json:"status,omitempty"`
}

// LockInfo defines model for LockInfo.
type LockInfo struct {
	Created   *time.Time `json:"created,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Info      *string    `json:"info,omitempty"`
	Operation *string    `json:"operation,omitempty"`
	Path      *string    `json:"path,omitempty"`
	Version   *string    `json:"version,omitempty"`
	Who       *string    `json:"who,omitempty"`
}

// Payload defines model for Payload.
type Payload = openapi_types.File

// Project defines model for Project.
type Project struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	EnvCount    *int       `json:"envCount,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Name        *string    `json:"name,omitempty"`
	Slug        *string    `json:"slug,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
		Slug *string `json:"slug,omitempty"`
	} `json:"team,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// ProjectCreate defines model for ProjectCreate.
type ProjectCreate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	Slug        *string `json:"slug,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// ProjectUpdate defines model for ProjectUpdate.
type ProjectUpdate struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	Slug        *string `json:"slug,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
}

// Snapshot defines model for Snapshot.
type Snapshot struct {
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	RecordType  *string    `json:"record_type,omitempty"`
	RecordUuid  *string    `json:"record_uuid,omitempty"`
	Status      *string    `json:"status,omitempty"`
	Team        *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
		Slug *string `json:"slug,omitempty"`
	} `json:"team,omitempty"`
	Title     *string    `json:"title,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// SnapshotCreate defines model for SnapshotCreate.
type SnapshotCreate struct {
	Description *string `json:"description,omitempty"`
	RecordType  *string `json:"record_type,omitempty"`
	RecordUuid  *string `json:"record_uuid,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// SnapshotUpdate defines model for SnapshotUpdate.
type SnapshotUpdate struct {
	Description *string `json:"description,omitempty"`
	TeamId      *int    `json:"team_id,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// Task defines model for Task.
type Task struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Id        *string    `json:"id,omitempty"`
	RunAt     *time.Time `json:"runAt,omitempty"`
	Status    *string    `json:"status,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// Team defines model for Team.
type Team struct {
	CreatedAt     *time.Time `json:"createdAt,omitempty"`
	Description   *string    `json:"description,omitempty"`
	Id            *string    `json:"id,omitempty"`
	Members       *[]string  `json:"members,omitempty"`
	Name          *string    `json:"name,omitempty"`
	ProjectsCount *int       `json:"projectsCount,omitempty"`
	Slug          *string    `json:"slug,omitempty"`
	UpdatedAt     *time.Time `json:"updatedAt,omitempty"`
	UsersCount    *int       `json:"usersCount,omitempty"`
}

// TeamCreate defines model for TeamCreate.
type TeamCreate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Slug        *string   `json:"slug,omitempty"`
}

// TeamUpdate defines model for TeamUpdate.
type TeamUpdate struct {
	Description *string   `json:"description,omitempty"`
	Members     *[]string `json:"members,omitempty"`
	Name        *string   `json:"name,omitempty"`
	Slug        *string   `json:"slug,omitempty"`
}

// User defines model for User.
type User struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	Email     *string    `json:"email,omitempty"`
	Id        *string    `json:"id,omitempty"`
	Name      *string    `json:"name,omitempty"`
	Role      *string    `json:"role,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// UserCreate defines model for UserCreate.
type UserCreate struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	Role     *string `json:"role,omitempty"`
}

// UserUpdate defines model for UserUpdate.
type UserUpdate struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	Role     *string `json:"role,omitempty"`
}

// EnvironmentId defines model for environmentId.
type EnvironmentId = string

// ProjectId defines model for projectId.
type ProjectId = string

// TeamId defines model for teamId.
type TeamId = string

// GetApiV1ProjectParams defines parameters for GetApiV1Project.
type GetApiV1ProjectParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetApiV1ProjectProjectIdEnvironmentParams defines parameters for GetApiV1ProjectProjectIdEnvironment.
type GetApiV1ProjectProjectIdEnvironmentParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetApiV1SnapshotParams defines parameters for GetApiV1Snapshot.
type GetApiV1SnapshotParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetApiV1TeamParams defines parameters for GetApiV1Team.
type GetApiV1TeamParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// GetApiV1UserParams defines parameters for GetApiV1User.
type GetApiV1UserParams struct {
	Limit  *int `form:"limit,omitempty" json:"limit,omitempty"`
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// PostApiV1ProjectJSONRequestBody defines body for PostApiV1Project for application/json ContentType.
type PostApiV1ProjectJSONRequestBody = ProjectCreate

// PutApiV1ProjectIdJSONRequestBody defines body for PutApiV1ProjectId for application/json ContentType.
type PutApiV1ProjectIdJSONRequestBody = ProjectUpdate

// PostApiV1ProjectProjectIdEnvironmentJSONRequestBody defines body for PostApiV1ProjectProjectIdEnvironment for application/json ContentType.
type PostApiV1ProjectProjectIdEnvironmentJSONRequestBody = EnvironmentCreate

// PutApiV1ProjectProjectIdEnvironmentEnvironmentIdJSONRequestBody defines body for PutApiV1ProjectProjectIdEnvironmentEnvironmentId for application/json ContentType.
type PutApiV1ProjectProjectIdEnvironmentEnvironmentIdJSONRequestBody = EnvironmentUpdate

// PostApiV1SnapshotJSONRequestBody defines body for PostApiV1Snapshot for application/json ContentType.
type PostApiV1SnapshotJSONRequestBody = SnapshotCreate

// PutApiV1SnapshotIdJSONRequestBody defines body for PutApiV1SnapshotId for application/json ContentType.
type PutApiV1SnapshotIdJSONRequestBody = SnapshotUpdate

// PostApiV1TeamJSONRequestBody defines body for PostApiV1Team for application/json ContentType.
type PostApiV1TeamJSONRequestBody = TeamCreate

// PutApiV1TeamIdJSONRequestBody defines body for PutApiV1TeamId for application/json ContentType.
type PutApiV1TeamIdJSONRequestBody = TeamUpdate

// PostApiV1UserJSONRequestBody defines body for PostApiV1User for application/json ContentType.
type PostApiV1UserJSONRequestBody = UserCreate

// PutApiV1UserIdJSONRequestBody defines body for PutApiV1UserId for application/json ContentType.
type PutApiV1UserIdJSONRequestBody = UserUpdate

// LockEnvironmentJSONRequestBody defines body for LockEnvironment for application/json ContentType.
type LockEnvironmentJSONRequestBody = LockInfo

// UpdateEnvironmentStateJSONRequestBody defines body for UpdateEnvironmentState for application/json ContentType.
type UpdateEnvironmentStateJSONRequestBody = Payload

// UnlockEnvironmentJSONRequestBody defines body for UnlockEnvironment for application/json ContentType.
type UnlockEnvironmentJSONRequestBody = LockInfo

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"HC2YkLP30/dTtLpd/RMAAP//EwO5RWVkAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
